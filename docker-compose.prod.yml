version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: school_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:rootpassword}
      MYSQL_DATABASE: school_fee_register
      MYSQL_USER: ${DB_USERNAME:schooluser}
      MYSQL_PASSWORD: ${DB_PASSWORD:schoolpass}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - school_network
    command: --default-authentication-plugin=mysql_native_password

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: school_auth_service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:mysql://mysql:3306/school_auth_db
      DB_USERNAME: ${DB_USERNAME:schooluser}
      DB_PASSWORD: ${DB_PASSWORD:schoolpass}
      JWT_SECRET: ${JWT_SECRET:your-super-secret-jwt-key-change-this-in-production}
      EUREKA_URL: http://eureka-server:8761/eureka/
    ports:
      - "8082:8082"
    depends_on:
      - mysql
    networks:
      - school_network

  # Student Service
  student-service:
    build:
      context: ./backend/student-service
      dockerfile: Dockerfile
    container_name: school_student_service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:mysql://mysql:3306/school_fee_register
      DB_USERNAME: ${DB_USERNAME:schooluser}
      DB_PASSWORD: ${DB_PASSWORD:schoolpass}
      EUREKA_URL: http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    networks:
      - school_network

  # Eureka Server (Service Discovery)
  eureka-server:
    build:
      context: ./backend/eureka-server
      dockerfile: Dockerfile
    container_name: school_eureka_server
    restart: unless-stopped
    ports:
      - "8761:8761"
    networks:
      - school_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: school_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: https://api.yourdomain.com
      REACT_APP_AUTH_API_BASE_URL: https://auth.yourdomain.com
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - auth-service
      - student-service
    networks:
      - school_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: school_nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - auth-service
      - student-service
    networks:
      - school_network

  # Redis (for caching and sessions)
  redis:
    image: redis:alpine
    container_name: school_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - school_network

volumes:
  mysql_data:

networks:
  school_network:
    driver: bridge 