# Production Configuration for Student Service

# Server Configuration
server.port=8081
spring.application.name=student-service

# Production Database Configuration (MySQL)
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/school_fee_register?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8}
spring.datasource.username=${DB_USERNAME:schooluser}
spring.datasource.password=${DB_PASSWORD:schoolpass}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA & Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Disable data initialization in production
spring.sql.init.mode=never

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Eureka Discovery
eureka.client.service-url.defaultZone=${EUREKA_URL:http://localhost:8761/eureka/}
spring.application.name=student-service

# Logging Configuration
logging.level.root=WARN
logging.level.com.school=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.roles=ADMIN
management.metrics.export.prometheus.enabled=true

# Security Configuration
spring.security.basic.enabled=true
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# CORS Configuration
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000,https://yourdomain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Razorpay Configuration
razorpay.key.id=${RAZORPAY_KEY_ID:rzp_test_YOUR_TEST_KEY_ID}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:YOUR_TEST_SECRET_KEY}
razorpay.currency=INR
razorpay.company.name=Kidsy
razorpay.company.description=Kidsy School Management System
razorpay.company.logo=https://yourdomain.com/logo.png
razorpay.company.color=#1976d2

# Performance Configuration
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

# Error Handling
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false 